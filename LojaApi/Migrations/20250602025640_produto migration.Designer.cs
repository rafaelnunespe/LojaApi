// <auto-generated />
using LojaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaApi.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250602025640_produto migration")]
    partial class produtomigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaApi.Models.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caixas");
                });

            modelBuilder.Entity("LojaApi.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.HasKey("PedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("LojaApi.Models.PedidoEmbalado", b =>
                {
                    b.Property<int>("Pedido_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pedido_id"));

                    b.HasKey("Pedido_id");

                    b.ToTable("PedidosEmbalados");
                });

            modelBuilder.Entity("LojaApi.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("LojaApi.Models.Caixa", b =>
                {
                    b.OwnsOne("LojaApi.Models.Dimensoes", "Dimensoes", b1 =>
                        {
                            b1.Property<int>("CaixaId")
                                .HasColumnType("int");

                            b1.Property<int>("Altura")
                                .HasColumnType("int");

                            b1.Property<int>("Comprimento")
                                .HasColumnType("int");

                            b1.Property<int>("Largura")
                                .HasColumnType("int");

                            b1.HasKey("CaixaId");

                            b1.ToTable("Caixas");

                            b1.WithOwner()
                                .HasForeignKey("CaixaId");
                        });

                    b.Navigation("Dimensoes")
                        .IsRequired();
                });

            modelBuilder.Entity("LojaApi.Models.PedidoEmbalado", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<LojaApi.Models.CaixaEmbalada>", "Caixas", b1 =>
                        {
                            b1.Property<int>("PedidoEmbaladoPedido_id")
                                .HasColumnType("int");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("PedidoEmbaladoPedido_id");

                            b1.ToTable("PedidosEmbalados");

                            b1.WithOwner()
                                .HasForeignKey("PedidoEmbaladoPedido_id");
                        });

                    b.Navigation("Caixas")
                        .IsRequired();
                });

            modelBuilder.Entity("LojaApi.Models.Produto", b =>
                {
                    b.HasOne("LojaApi.Models.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LojaApi.Models.Dimensoes", "Dimensoes", b1 =>
                        {
                            b1.Property<int>("ProdutoId")
                                .HasColumnType("int");

                            b1.Property<int>("Altura")
                                .HasColumnType("int");

                            b1.Property<int>("Comprimento")
                                .HasColumnType("int");

                            b1.Property<int>("Largura")
                                .HasColumnType("int");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Dimensoes")
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LojaApi.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
